// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package routes

import (
	"cp_tracker/db"
	"cp_tracker/user/controllers"
	"cp_tracker/user/services"

	"go.mongodb.org/mongo-driver/mongo"
)

// Injectors from wire.go:

func InitializeApp() (App, error) {
	database, err := db.ProvideMongoDB()
	if err != nil {
		return App{}, err
	}
	userService, err := services.NewUserService(database)
	if err != nil {
		return App{}, err
	}
	inviteCodeService, err := services.NewInviteCodeService(database)
	if err != nil {
		return App{}, err
	}
	userController := controllers.NewUserController(userService, inviteCodeService)
	userDataService := services.NewUserDataService(database)
	userDataController := controllers.NewUserDataController(userDataService)
	app := App{
		MongoDB:            database,
		UserService:        userService,
		UserController:     userController,
		InviteCodeService:  inviteCodeService,
		UserDataService:    userDataService,
		UserDataController: userDataController,
	}
	return app, nil
}

// wire.go:

type App struct {
	MongoDB            *mongo.Database
	UserService        *services.UserService
	UserController     *controllers.UserController
	InviteCodeService  *services.InviteCodeService
	UserDataService    *services.UserDataService
	UserDataController *controllers.UserDataController
}
